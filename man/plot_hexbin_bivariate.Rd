% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_hexbin_bivariate.R
\name{plot_hexbin_bivariate}
\alias{plot_hexbin_bivariate}
\title{Plot of feature expression and uncertainty of single cells in bivariate 
   hexagon cells.}
\usage{
plot_hexbin_bivariate(sce, mod = "RNA", type, feature, title = NULL,
  xlab = NULL, ylab = NULL)
}
\arguments{
\item{sce}{A \code{\link[SingleCellExperiment]{SingleCellExperiment}}
or \code{\link[Seurat]{Seurat-class}} object.}

\item{mod}{A string referring to the name of the modality used for plotting.
For RNA modality use "RNA". For other modalities use name of alternative 
object for the \code{\link[SingleCellExperiment]{SingleCellExperiment}} 
or the name of the assay for the \code{\link[Seurat]{Seurat-class}} 
object.}

\item{type}{A string referring to the type of assay in the
\code{\link[SingleCellExperiment]{SingleCellExperiment}} object or the
data transformation in the \code{\link[Seurat]{Seurat-class}} object.}

\item{feature}{A string referring to the name of one feature.}

\item{title}{A string containing the title of the plot.}

\item{xlab}{A string containing the title of the x axis.}

\item{ylab}{A string containing the title of the y axis.}
}
\value{
A \code{\link{ggplot2}{ggplot}} object.
}
\description{
Plot of feature expression and uncertainty of single cells in bivariate 
   hexagon cells.
}
\details{
This function plots the mean expression and standard deviation of 
   any feature in the hexagon cell representation calculated with 
   \code{\link{make_hexbin}}. The colour of the hexagon represents a 
   combination of both standard deviation and mean expression.

   To access the data that has been integrated in the 
   \code{\link[Seurat]{Seurat-class}} object specifiy \code{mod="integrated"}.
}
\examples{
# For Seurat object
library(Seurat)
data("pbmc_small")
pbmc_small <- make_hexbin(pbmc_small, 10, dimension_reduction = "PCA")
plot_hexbin_bivariate(pbmc_small, type="counts", feature="TALDO1")
\dontrun{
library(TENxPBMCData)
library(scater)
tenx_pbmc3k <- TENxPBMCData(dataset = "pbmc3k")
rm_ind <- calcAverage(tenx_pbmc3k)<0.1
tenx_pbmc3k <- tenx_pbmc3k[!rm_ind,]
colData(tenx_pbmc3k) <- cbind(colData(tenx_pbmc3k),
   perCellQCMetrics(tenx_pbmc3k))
tenx_pbmc3k <- normalize(tenx_pbmc3k)
tenx_pbmc3k <- runPCA(tenx_pbmc3k)
tenx_pbmc3k <- make_hexbin( tenx_pbmc3k, 20, dimension_reduction = "PCA")
plot_hexbin_bivariate(tenx_pbmc3k, type="logcounts",
   feature="ENSG00000135250")
}
}
